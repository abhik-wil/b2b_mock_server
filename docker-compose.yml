services:
  db:
    image: postgres:16-alpine
    ports:
      - "5434:5432"
    env_file:
      - ./apps/backend/.env
    # environment:
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - ondc
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "mock",
          "-h",
          "localhost",
          "-U",
          "postgres",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  base:
    build: 
      context: .
      dockerfile: ./apps/backend/Dockerfile.dbsetup
    env_file:
      - ./apps/backend/.env
    image: ondc-mock-setup
    restart: always

  initDb:
    extends: base
    command: npx prisma migrate deploy --preview-feature
    restart: "on-failure"
    env_file:
      - ./apps/backend/.env
    # environment:
    #   - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy

  redis:
    env_file:
      - ./apps/backend/.env
    image: redis:7
    ports:
      - "${REDIS_PORT:-6379}:6379"
    # environment:
    #   - REDIS_PASSWORD=${REDIS_PASS}
    networks:
      - ondc

  api:    
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile.backend
    ports:
      - "3000:${PORT:-3000}"
    env_file:
      - ./apps/backend/.env
    # environment:
    #   - PORT
    #   - RATE_LIMIT_MODE=${RATE_LIMIT_MODE}
    #   - RATE_LIMIT_24HR=${RATE_LIMIT_24HR}
    #   - PRIVATE_KEY=${PRIVATE_KEY}
    #   - UNIQUE_KEY=${UNIQUE_KEY}
    #   - SUBSCRIBER_ID=${SUBSCRIBER_ID}
    #   - DATABASE_URL=${DATABASE_URL}
    restart: always
    depends_on:
      - db
      - initDb
    networks:
      - ondc

  web:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile.frontend
    # environment:
    #   - VITE_SERVER_URL=${VITE_SERVER_URL}
    #   - MOCKSERVER_ID=${MOCKSERVER_ID}
    #   - NODE_OPTIONS=${NODE_OPTIONS}
    ports:
      - "8080:80"
    restart: always
    networks:
      - ondc
networks:
  ondc:
